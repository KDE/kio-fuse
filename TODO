General:
- Integration into KIO/Plasma
Filesystem features:
- opendir/readdir/releasedir could be more POSIX compliant by increasing the lookup count of
  children and storing a copy of childrenInos in fuse_file_info.
- Handle more FUSE ops:
  * link (to allow relinking of deleted nodes only, like O_TMPFILE)
  * statvfs (?)
  * ACLs (?)
  * interrupting requests (just killing the KIO Job would also break other requests for the
    same resource)
- Refresh attributes of files/dirs and children of dirs after a while:
  Currently directories are only listed once and files only stat'd once.
  * Print a warning if a file with dirty cache got deleted? (renames can't be detected)
- Umount support:
  Might not even be necessary - except for the nodes in RAM it does not use any resources
KIO Slave support:
- Deal with invalid size reporting slaves (http/gdrive/...)?
Performance/usability improvements:
- Better error reporting:
  * Flushing happens on close(), which can't report errors, so it might be a good idea to show
    a notification to the user if it fails
- Improve usability with large files over a slow connection (e.g. VM disk images):
  * Don't cache too large files - might DoS the system. Determining the mime type of a single VM disk
    fills /tmp (or wherever nodes created with tmpfile() reside in). Those files are impractical
	to handle without KIO::read/KIO::write.
- Re-introduce writeback-caching, which would improve performance of FileJob-based IO.
  Currently disabled due to design issues upstream (fuse/libfuse). See discussion:
  * https://sourceforge.net/p/fuse/mailman/message/36524459/
  * https://sourceforge.net/p/fuse/mailman/message/36878595/
  * https://git.kernel.org/pub/scm/linux/kernel/git/mszeredi/fuse.git/tree/Documentation/filesystems/fuse-io.txt?id=5ba24197b
Bugfixes:
- Check whether write access works before writing into the cache:
  Currently write access it not explicitly checked at all, possibly leading to data loss
